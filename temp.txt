@app.callback(
    Output('db-name-header', 'children'),
    [Input('db-dropdown', 'value')]
)
def update_db_header(selected_db):
    if selected_db:
        return f"Selected Database: {selected_db}"
    return "No Database Selected"


@app.callback(
    [Output('cytoscape-tree', 'elements'),
     Output('error-div', 'children')],
    [Input('submit-btn', 'n_clicks')],
    [State('db-dropdown', 'value'), State('query-input', 'value')]
)
def update_output(n_clicks, selected_db, query):
    if not selected_db:
        return [], "Please select a database."

    if not query:
        return [], "Please enter a query."

    if n_clicks and selected_db and query:
        formatted_query = query.replace('\n', ' ')

        try:
            db_path = os.path.join(DB_FOLDER, selected_db)
            db = SQLite3()
            db.open(db_path)

            json_tree = parse_query_with_validation(formatted_query, db)

            if 'error' in json_tree:
                raise Exception(f"Error in query: {json_tree['error']}")

            elements = json_to_cytoscape_elements(json_tree)

            db.close()

            return elements, ""

        except Exception as e:
            return [], str(e)

    return [], "Please select a database and enter a valid query."
