Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> query
Rule 1     query -> expr SEMI
Rule 2     expr -> proj_expr
Rule 3     expr -> rename_expr
Rule 4     expr -> union_expr
Rule 5     expr -> minus_expr
Rule 6     expr -> intersect_expr
Rule 7     expr -> join_expr
Rule 8     expr -> times_expr
Rule 9     expr -> paren_expr
Rule 10    expr -> select_expr
Rule 11    expr -> aggregate_expr_1
Rule 12    expr -> aggregate_expr_2
Rule 13    expr -> aggregate_expr_3
Rule 14    expr -> ID
Rule 15    proj_expr -> PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT
Rule 16    rename_expr -> RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT
Rule 17    attr_list -> ID
Rule 18    attr_list -> attr_list COMMA ID
Rule 19    union_expr -> expr UNION expr
Rule 20    minus_expr -> expr MINUS expr
Rule 21    intersect_expr -> expr INTERSECT expr
Rule 22    join_expr -> expr JOIN expr
Rule 23    times_expr -> expr TIMES expr
Rule 24    paren_expr -> LPARENT expr RPARENT
Rule 25    select_expr -> SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT
Rule 26    condition -> simple_condition
Rule 27    condition -> condition AND simple_condition
Rule 28    simple_condition -> operand COMPARISON operand
Rule 29    operand -> ID
Rule 30    operand -> STRING
Rule 31    operand -> NUMBER
Rule 32    aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
Rule 33    aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
Rule 34    aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT
Rule 35    gen_attr_list -> gen_attr
Rule 36    gen_attr_list -> gen_attr_list COMMA gen_attr
Rule 37    gen_attr -> ID
Rule 38    gen_attr -> AGG_OP LPARENT ID RPARENT
Rule 39    gen_condition -> simple_gen_condition
Rule 40    gen_condition -> gen_condition AND simple_gen_condition
Rule 41    simple_gen_condition -> gen_operand COMPARISON gen_operand
Rule 42    simple_gen_condition -> gen_operand COMPARISON operand
Rule 43    simple_gen_condition -> operand COMPARISON gen_operand
Rule 44    simple_gen_condition -> operand COMPARISON operand
Rule 45    gen_operand -> AGG_OP LPARENT ID RPARENT

Terminals, with rules where they appear

AGGREGATE            : 32 33 34
AGG_OP               : 38 45
AND                  : 27 40
COMMA                : 18 32 33 33 34 34 34 36
COMPARISON           : 28 41 42 43 44
ID                   : 14 17 18 29 37 38 45
INTERSECT            : 21
JOIN                 : 22
LBRACKET             : 15 16 25 32 33 34
LPARENT              : 15 16 24 25 32 32 32 33 33 33 33 34 34 34 34 34 38 45
MINUS                : 20
NUMBER               : 31
PROJECT              : 15
RBRACKET             : 15 16 25 32 33 34
RENAME               : 16
RPARENT              : 15 16 24 25 32 32 32 33 33 33 33 34 34 34 34 34 38 45
SELECT               : 25
SEMI                 : 1
STRING               : 30
TIMES                : 23
UNION                : 19
error                : 

Nonterminals, with rules where they appear

aggregate_expr_1     : 11
aggregate_expr_2     : 12
aggregate_expr_3     : 13
attr_list            : 15 16 18 32 33 33 34 34
condition            : 25 27
expr                 : 1 15 16 19 19 20 20 21 21 22 22 23 23 24 25 32 33 34
gen_attr             : 35 36
gen_attr_list        : 32 33 34 36
gen_condition        : 34 40
gen_operand          : 41 41 42 43
intersect_expr       : 6
join_expr            : 7
minus_expr           : 5
operand              : 28 28 42 43 44 44
paren_expr           : 9
proj_expr            : 2
query                : 0
rename_expr          : 3
select_expr          : 10
simple_condition     : 26 27
simple_gen_condition : 39 40
times_expr           : 8
union_expr           : 4

Parsing method: LALR

state 0

    (0) S' -> . query
    (1) query -> . expr SEMI
    (2) expr -> . proj_expr
    (3) expr -> . rename_expr
    (4) expr -> . union_expr
    (5) expr -> . minus_expr
    (6) expr -> . intersect_expr
    (7) expr -> . join_expr
    (8) expr -> . times_expr
    (9) expr -> . paren_expr
    (10) expr -> . select_expr
    (11) expr -> . aggregate_expr_1
    (12) expr -> . aggregate_expr_2
    (13) expr -> . aggregate_expr_3
    (14) expr -> . ID
    (15) proj_expr -> . PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (16) rename_expr -> . RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (19) union_expr -> . expr UNION expr
    (20) minus_expr -> . expr MINUS expr
    (21) intersect_expr -> . expr INTERSECT expr
    (22) join_expr -> . expr JOIN expr
    (23) times_expr -> . expr TIMES expr
    (24) paren_expr -> . LPARENT expr RPARENT
    (25) select_expr -> . SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT
    (32) aggregate_expr_1 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    ID              shift and go to state 15
    PROJECT         shift and go to state 16
    RENAME          shift and go to state 18
    LPARENT         shift and go to state 17
    SELECT          shift and go to state 19
    AGGREGATE       shift and go to state 20

    query                          shift and go to state 1
    expr                           shift and go to state 2
    proj_expr                      shift and go to state 3
    rename_expr                    shift and go to state 4
    union_expr                     shift and go to state 5
    minus_expr                     shift and go to state 6
    intersect_expr                 shift and go to state 7
    join_expr                      shift and go to state 8
    times_expr                     shift and go to state 9
    paren_expr                     shift and go to state 10
    select_expr                    shift and go to state 11
    aggregate_expr_1               shift and go to state 12
    aggregate_expr_2               shift and go to state 13
    aggregate_expr_3               shift and go to state 14

state 1

    (0) S' -> query .



state 2

    (1) query -> expr . SEMI
    (19) union_expr -> expr . UNION expr
    (20) minus_expr -> expr . MINUS expr
    (21) intersect_expr -> expr . INTERSECT expr
    (22) join_expr -> expr . JOIN expr
    (23) times_expr -> expr . TIMES expr

    SEMI            shift and go to state 21
    UNION           shift and go to state 22
    MINUS           shift and go to state 23
    INTERSECT       shift and go to state 24
    JOIN            shift and go to state 25
    TIMES           shift and go to state 26


state 3

    (2) expr -> proj_expr .

    SEMI            reduce using rule 2 (expr -> proj_expr .)
    UNION           reduce using rule 2 (expr -> proj_expr .)
    MINUS           reduce using rule 2 (expr -> proj_expr .)
    INTERSECT       reduce using rule 2 (expr -> proj_expr .)
    JOIN            reduce using rule 2 (expr -> proj_expr .)
    TIMES           reduce using rule 2 (expr -> proj_expr .)
    RPARENT         reduce using rule 2 (expr -> proj_expr .)


state 4

    (3) expr -> rename_expr .

    SEMI            reduce using rule 3 (expr -> rename_expr .)
    UNION           reduce using rule 3 (expr -> rename_expr .)
    MINUS           reduce using rule 3 (expr -> rename_expr .)
    INTERSECT       reduce using rule 3 (expr -> rename_expr .)
    JOIN            reduce using rule 3 (expr -> rename_expr .)
    TIMES           reduce using rule 3 (expr -> rename_expr .)
    RPARENT         reduce using rule 3 (expr -> rename_expr .)


state 5

    (4) expr -> union_expr .

    SEMI            reduce using rule 4 (expr -> union_expr .)
    UNION           reduce using rule 4 (expr -> union_expr .)
    MINUS           reduce using rule 4 (expr -> union_expr .)
    INTERSECT       reduce using rule 4 (expr -> union_expr .)
    JOIN            reduce using rule 4 (expr -> union_expr .)
    TIMES           reduce using rule 4 (expr -> union_expr .)
    RPARENT         reduce using rule 4 (expr -> union_expr .)


state 6

    (5) expr -> minus_expr .

    SEMI            reduce using rule 5 (expr -> minus_expr .)
    UNION           reduce using rule 5 (expr -> minus_expr .)
    MINUS           reduce using rule 5 (expr -> minus_expr .)
    INTERSECT       reduce using rule 5 (expr -> minus_expr .)
    JOIN            reduce using rule 5 (expr -> minus_expr .)
    TIMES           reduce using rule 5 (expr -> minus_expr .)
    RPARENT         reduce using rule 5 (expr -> minus_expr .)


state 7

    (6) expr -> intersect_expr .

    SEMI            reduce using rule 6 (expr -> intersect_expr .)
    UNION           reduce using rule 6 (expr -> intersect_expr .)
    MINUS           reduce using rule 6 (expr -> intersect_expr .)
    INTERSECT       reduce using rule 6 (expr -> intersect_expr .)
    JOIN            reduce using rule 6 (expr -> intersect_expr .)
    TIMES           reduce using rule 6 (expr -> intersect_expr .)
    RPARENT         reduce using rule 6 (expr -> intersect_expr .)


state 8

    (7) expr -> join_expr .

    SEMI            reduce using rule 7 (expr -> join_expr .)
    UNION           reduce using rule 7 (expr -> join_expr .)
    MINUS           reduce using rule 7 (expr -> join_expr .)
    INTERSECT       reduce using rule 7 (expr -> join_expr .)
    JOIN            reduce using rule 7 (expr -> join_expr .)
    TIMES           reduce using rule 7 (expr -> join_expr .)
    RPARENT         reduce using rule 7 (expr -> join_expr .)


state 9

    (8) expr -> times_expr .

    SEMI            reduce using rule 8 (expr -> times_expr .)
    UNION           reduce using rule 8 (expr -> times_expr .)
    MINUS           reduce using rule 8 (expr -> times_expr .)
    INTERSECT       reduce using rule 8 (expr -> times_expr .)
    JOIN            reduce using rule 8 (expr -> times_expr .)
    TIMES           reduce using rule 8 (expr -> times_expr .)
    RPARENT         reduce using rule 8 (expr -> times_expr .)


state 10

    (9) expr -> paren_expr .

    SEMI            reduce using rule 9 (expr -> paren_expr .)
    UNION           reduce using rule 9 (expr -> paren_expr .)
    MINUS           reduce using rule 9 (expr -> paren_expr .)
    INTERSECT       reduce using rule 9 (expr -> paren_expr .)
    JOIN            reduce using rule 9 (expr -> paren_expr .)
    TIMES           reduce using rule 9 (expr -> paren_expr .)
    RPARENT         reduce using rule 9 (expr -> paren_expr .)


state 11

    (10) expr -> select_expr .

    SEMI            reduce using rule 10 (expr -> select_expr .)
    UNION           reduce using rule 10 (expr -> select_expr .)
    MINUS           reduce using rule 10 (expr -> select_expr .)
    INTERSECT       reduce using rule 10 (expr -> select_expr .)
    JOIN            reduce using rule 10 (expr -> select_expr .)
    TIMES           reduce using rule 10 (expr -> select_expr .)
    RPARENT         reduce using rule 10 (expr -> select_expr .)


state 12

    (11) expr -> aggregate_expr_1 .

    SEMI            reduce using rule 11 (expr -> aggregate_expr_1 .)
    UNION           reduce using rule 11 (expr -> aggregate_expr_1 .)
    MINUS           reduce using rule 11 (expr -> aggregate_expr_1 .)
    INTERSECT       reduce using rule 11 (expr -> aggregate_expr_1 .)
    JOIN            reduce using rule 11 (expr -> aggregate_expr_1 .)
    TIMES           reduce using rule 11 (expr -> aggregate_expr_1 .)
    RPARENT         reduce using rule 11 (expr -> aggregate_expr_1 .)


state 13

    (12) expr -> aggregate_expr_2 .

    SEMI            reduce using rule 12 (expr -> aggregate_expr_2 .)
    UNION           reduce using rule 12 (expr -> aggregate_expr_2 .)
    MINUS           reduce using rule 12 (expr -> aggregate_expr_2 .)
    INTERSECT       reduce using rule 12 (expr -> aggregate_expr_2 .)
    JOIN            reduce using rule 12 (expr -> aggregate_expr_2 .)
    TIMES           reduce using rule 12 (expr -> aggregate_expr_2 .)
    RPARENT         reduce using rule 12 (expr -> aggregate_expr_2 .)


state 14

    (13) expr -> aggregate_expr_3 .

    SEMI            reduce using rule 13 (expr -> aggregate_expr_3 .)
    UNION           reduce using rule 13 (expr -> aggregate_expr_3 .)
    MINUS           reduce using rule 13 (expr -> aggregate_expr_3 .)
    INTERSECT       reduce using rule 13 (expr -> aggregate_expr_3 .)
    JOIN            reduce using rule 13 (expr -> aggregate_expr_3 .)
    TIMES           reduce using rule 13 (expr -> aggregate_expr_3 .)
    RPARENT         reduce using rule 13 (expr -> aggregate_expr_3 .)


state 15

    (14) expr -> ID .

    SEMI            reduce using rule 14 (expr -> ID .)
    UNION           reduce using rule 14 (expr -> ID .)
    MINUS           reduce using rule 14 (expr -> ID .)
    INTERSECT       reduce using rule 14 (expr -> ID .)
    JOIN            reduce using rule 14 (expr -> ID .)
    TIMES           reduce using rule 14 (expr -> ID .)
    RPARENT         reduce using rule 14 (expr -> ID .)


state 16

    (15) proj_expr -> PROJECT . LBRACKET attr_list RBRACKET LPARENT expr RPARENT

    LBRACKET        shift and go to state 27


state 17

    (24) paren_expr -> LPARENT . expr RPARENT
    (2) expr -> . proj_expr
    (3) expr -> . rename_expr
    (4) expr -> . union_expr
    (5) expr -> . minus_expr
    (6) expr -> . intersect_expr
    (7) expr -> . join_expr
    (8) expr -> . times_expr
    (9) expr -> . paren_expr
    (10) expr -> . select_expr
    (11) expr -> . aggregate_expr_1
    (12) expr -> . aggregate_expr_2
    (13) expr -> . aggregate_expr_3
    (14) expr -> . ID
    (15) proj_expr -> . PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (16) rename_expr -> . RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (19) union_expr -> . expr UNION expr
    (20) minus_expr -> . expr MINUS expr
    (21) intersect_expr -> . expr INTERSECT expr
    (22) join_expr -> . expr JOIN expr
    (23) times_expr -> . expr TIMES expr
    (24) paren_expr -> . LPARENT expr RPARENT
    (25) select_expr -> . SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT
    (32) aggregate_expr_1 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    ID              shift and go to state 15
    PROJECT         shift and go to state 16
    RENAME          shift and go to state 18
    LPARENT         shift and go to state 17
    SELECT          shift and go to state 19
    AGGREGATE       shift and go to state 20

    expr                           shift and go to state 28
    proj_expr                      shift and go to state 3
    rename_expr                    shift and go to state 4
    union_expr                     shift and go to state 5
    minus_expr                     shift and go to state 6
    intersect_expr                 shift and go to state 7
    join_expr                      shift and go to state 8
    times_expr                     shift and go to state 9
    paren_expr                     shift and go to state 10
    select_expr                    shift and go to state 11
    aggregate_expr_1               shift and go to state 12
    aggregate_expr_2               shift and go to state 13
    aggregate_expr_3               shift and go to state 14

state 18

    (16) rename_expr -> RENAME . LBRACKET attr_list RBRACKET LPARENT expr RPARENT

    LBRACKET        shift and go to state 29


state 19

    (25) select_expr -> SELECT . LBRACKET condition RBRACKET LPARENT expr RPARENT

    LBRACKET        shift and go to state 30


state 20

    (32) aggregate_expr_1 -> AGGREGATE . LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> AGGREGATE . LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> AGGREGATE . LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    LBRACKET        shift and go to state 31


state 21

    (1) query -> expr SEMI .

    $end            reduce using rule 1 (query -> expr SEMI .)


state 22

    (19) union_expr -> expr UNION . expr
    (2) expr -> . proj_expr
    (3) expr -> . rename_expr
    (4) expr -> . union_expr
    (5) expr -> . minus_expr
    (6) expr -> . intersect_expr
    (7) expr -> . join_expr
    (8) expr -> . times_expr
    (9) expr -> . paren_expr
    (10) expr -> . select_expr
    (11) expr -> . aggregate_expr_1
    (12) expr -> . aggregate_expr_2
    (13) expr -> . aggregate_expr_3
    (14) expr -> . ID
    (15) proj_expr -> . PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (16) rename_expr -> . RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (19) union_expr -> . expr UNION expr
    (20) minus_expr -> . expr MINUS expr
    (21) intersect_expr -> . expr INTERSECT expr
    (22) join_expr -> . expr JOIN expr
    (23) times_expr -> . expr TIMES expr
    (24) paren_expr -> . LPARENT expr RPARENT
    (25) select_expr -> . SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT
    (32) aggregate_expr_1 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    ID              shift and go to state 15
    PROJECT         shift and go to state 16
    RENAME          shift and go to state 18
    LPARENT         shift and go to state 17
    SELECT          shift and go to state 19
    AGGREGATE       shift and go to state 20

    expr                           shift and go to state 32
    proj_expr                      shift and go to state 3
    rename_expr                    shift and go to state 4
    union_expr                     shift and go to state 5
    minus_expr                     shift and go to state 6
    intersect_expr                 shift and go to state 7
    join_expr                      shift and go to state 8
    times_expr                     shift and go to state 9
    paren_expr                     shift and go to state 10
    select_expr                    shift and go to state 11
    aggregate_expr_1               shift and go to state 12
    aggregate_expr_2               shift and go to state 13
    aggregate_expr_3               shift and go to state 14

state 23

    (20) minus_expr -> expr MINUS . expr
    (2) expr -> . proj_expr
    (3) expr -> . rename_expr
    (4) expr -> . union_expr
    (5) expr -> . minus_expr
    (6) expr -> . intersect_expr
    (7) expr -> . join_expr
    (8) expr -> . times_expr
    (9) expr -> . paren_expr
    (10) expr -> . select_expr
    (11) expr -> . aggregate_expr_1
    (12) expr -> . aggregate_expr_2
    (13) expr -> . aggregate_expr_3
    (14) expr -> . ID
    (15) proj_expr -> . PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (16) rename_expr -> . RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (19) union_expr -> . expr UNION expr
    (20) minus_expr -> . expr MINUS expr
    (21) intersect_expr -> . expr INTERSECT expr
    (22) join_expr -> . expr JOIN expr
    (23) times_expr -> . expr TIMES expr
    (24) paren_expr -> . LPARENT expr RPARENT
    (25) select_expr -> . SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT
    (32) aggregate_expr_1 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    ID              shift and go to state 15
    PROJECT         shift and go to state 16
    RENAME          shift and go to state 18
    LPARENT         shift and go to state 17
    SELECT          shift and go to state 19
    AGGREGATE       shift and go to state 20

    expr                           shift and go to state 33
    proj_expr                      shift and go to state 3
    rename_expr                    shift and go to state 4
    union_expr                     shift and go to state 5
    minus_expr                     shift and go to state 6
    intersect_expr                 shift and go to state 7
    join_expr                      shift and go to state 8
    times_expr                     shift and go to state 9
    paren_expr                     shift and go to state 10
    select_expr                    shift and go to state 11
    aggregate_expr_1               shift and go to state 12
    aggregate_expr_2               shift and go to state 13
    aggregate_expr_3               shift and go to state 14

state 24

    (21) intersect_expr -> expr INTERSECT . expr
    (2) expr -> . proj_expr
    (3) expr -> . rename_expr
    (4) expr -> . union_expr
    (5) expr -> . minus_expr
    (6) expr -> . intersect_expr
    (7) expr -> . join_expr
    (8) expr -> . times_expr
    (9) expr -> . paren_expr
    (10) expr -> . select_expr
    (11) expr -> . aggregate_expr_1
    (12) expr -> . aggregate_expr_2
    (13) expr -> . aggregate_expr_3
    (14) expr -> . ID
    (15) proj_expr -> . PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (16) rename_expr -> . RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (19) union_expr -> . expr UNION expr
    (20) minus_expr -> . expr MINUS expr
    (21) intersect_expr -> . expr INTERSECT expr
    (22) join_expr -> . expr JOIN expr
    (23) times_expr -> . expr TIMES expr
    (24) paren_expr -> . LPARENT expr RPARENT
    (25) select_expr -> . SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT
    (32) aggregate_expr_1 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    ID              shift and go to state 15
    PROJECT         shift and go to state 16
    RENAME          shift and go to state 18
    LPARENT         shift and go to state 17
    SELECT          shift and go to state 19
    AGGREGATE       shift and go to state 20

    expr                           shift and go to state 34
    proj_expr                      shift and go to state 3
    rename_expr                    shift and go to state 4
    union_expr                     shift and go to state 5
    minus_expr                     shift and go to state 6
    intersect_expr                 shift and go to state 7
    join_expr                      shift and go to state 8
    times_expr                     shift and go to state 9
    paren_expr                     shift and go to state 10
    select_expr                    shift and go to state 11
    aggregate_expr_1               shift and go to state 12
    aggregate_expr_2               shift and go to state 13
    aggregate_expr_3               shift and go to state 14

state 25

    (22) join_expr -> expr JOIN . expr
    (2) expr -> . proj_expr
    (3) expr -> . rename_expr
    (4) expr -> . union_expr
    (5) expr -> . minus_expr
    (6) expr -> . intersect_expr
    (7) expr -> . join_expr
    (8) expr -> . times_expr
    (9) expr -> . paren_expr
    (10) expr -> . select_expr
    (11) expr -> . aggregate_expr_1
    (12) expr -> . aggregate_expr_2
    (13) expr -> . aggregate_expr_3
    (14) expr -> . ID
    (15) proj_expr -> . PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (16) rename_expr -> . RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (19) union_expr -> . expr UNION expr
    (20) minus_expr -> . expr MINUS expr
    (21) intersect_expr -> . expr INTERSECT expr
    (22) join_expr -> . expr JOIN expr
    (23) times_expr -> . expr TIMES expr
    (24) paren_expr -> . LPARENT expr RPARENT
    (25) select_expr -> . SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT
    (32) aggregate_expr_1 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    ID              shift and go to state 15
    PROJECT         shift and go to state 16
    RENAME          shift and go to state 18
    LPARENT         shift and go to state 17
    SELECT          shift and go to state 19
    AGGREGATE       shift and go to state 20

    expr                           shift and go to state 35
    proj_expr                      shift and go to state 3
    rename_expr                    shift and go to state 4
    union_expr                     shift and go to state 5
    minus_expr                     shift and go to state 6
    intersect_expr                 shift and go to state 7
    join_expr                      shift and go to state 8
    times_expr                     shift and go to state 9
    paren_expr                     shift and go to state 10
    select_expr                    shift and go to state 11
    aggregate_expr_1               shift and go to state 12
    aggregate_expr_2               shift and go to state 13
    aggregate_expr_3               shift and go to state 14

state 26

    (23) times_expr -> expr TIMES . expr
    (2) expr -> . proj_expr
    (3) expr -> . rename_expr
    (4) expr -> . union_expr
    (5) expr -> . minus_expr
    (6) expr -> . intersect_expr
    (7) expr -> . join_expr
    (8) expr -> . times_expr
    (9) expr -> . paren_expr
    (10) expr -> . select_expr
    (11) expr -> . aggregate_expr_1
    (12) expr -> . aggregate_expr_2
    (13) expr -> . aggregate_expr_3
    (14) expr -> . ID
    (15) proj_expr -> . PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (16) rename_expr -> . RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (19) union_expr -> . expr UNION expr
    (20) minus_expr -> . expr MINUS expr
    (21) intersect_expr -> . expr INTERSECT expr
    (22) join_expr -> . expr JOIN expr
    (23) times_expr -> . expr TIMES expr
    (24) paren_expr -> . LPARENT expr RPARENT
    (25) select_expr -> . SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT
    (32) aggregate_expr_1 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    ID              shift and go to state 15
    PROJECT         shift and go to state 16
    RENAME          shift and go to state 18
    LPARENT         shift and go to state 17
    SELECT          shift and go to state 19
    AGGREGATE       shift and go to state 20

    expr                           shift and go to state 36
    proj_expr                      shift and go to state 3
    rename_expr                    shift and go to state 4
    union_expr                     shift and go to state 5
    minus_expr                     shift and go to state 6
    intersect_expr                 shift and go to state 7
    join_expr                      shift and go to state 8
    times_expr                     shift and go to state 9
    paren_expr                     shift and go to state 10
    select_expr                    shift and go to state 11
    aggregate_expr_1               shift and go to state 12
    aggregate_expr_2               shift and go to state 13
    aggregate_expr_3               shift and go to state 14

state 27

    (15) proj_expr -> PROJECT LBRACKET . attr_list RBRACKET LPARENT expr RPARENT
    (17) attr_list -> . ID
    (18) attr_list -> . attr_list COMMA ID

    ID              shift and go to state 38

    attr_list                      shift and go to state 37

state 28

    (24) paren_expr -> LPARENT expr . RPARENT
    (19) union_expr -> expr . UNION expr
    (20) minus_expr -> expr . MINUS expr
    (21) intersect_expr -> expr . INTERSECT expr
    (22) join_expr -> expr . JOIN expr
    (23) times_expr -> expr . TIMES expr

    RPARENT         shift and go to state 39
    UNION           shift and go to state 22
    MINUS           shift and go to state 23
    INTERSECT       shift and go to state 24
    JOIN            shift and go to state 25
    TIMES           shift and go to state 26


state 29

    (16) rename_expr -> RENAME LBRACKET . attr_list RBRACKET LPARENT expr RPARENT
    (17) attr_list -> . ID
    (18) attr_list -> . attr_list COMMA ID

    ID              shift and go to state 38

    attr_list                      shift and go to state 40

state 30

    (25) select_expr -> SELECT LBRACKET . condition RBRACKET LPARENT expr RPARENT
    (26) condition -> . simple_condition
    (27) condition -> . condition AND simple_condition
    (28) simple_condition -> . operand COMPARISON operand
    (29) operand -> . ID
    (30) operand -> . STRING
    (31) operand -> . NUMBER

    ID              shift and go to state 44
    STRING          shift and go to state 45
    NUMBER          shift and go to state 46

    condition                      shift and go to state 41
    simple_condition               shift and go to state 42
    operand                        shift and go to state 43

state 31

    (32) aggregate_expr_1 -> AGGREGATE LBRACKET . LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> AGGREGATE LBRACKET . LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> AGGREGATE LBRACKET . LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    LPARENT         shift and go to state 47


state 32

    (19) union_expr -> expr UNION expr .
    (19) union_expr -> expr . UNION expr
    (20) minus_expr -> expr . MINUS expr
    (21) intersect_expr -> expr . INTERSECT expr
    (22) join_expr -> expr . JOIN expr
    (23) times_expr -> expr . TIMES expr

    SEMI            reduce using rule 19 (union_expr -> expr UNION expr .)
    RPARENT         reduce using rule 19 (union_expr -> expr UNION expr .)
    UNION           shift and go to state 22
    MINUS           shift and go to state 23
    INTERSECT       shift and go to state 24
    JOIN            shift and go to state 25
    TIMES           shift and go to state 26

  ! UNION           [ reduce using rule 19 (union_expr -> expr UNION expr .) ]
  ! MINUS           [ reduce using rule 19 (union_expr -> expr UNION expr .) ]
  ! INTERSECT       [ reduce using rule 19 (union_expr -> expr UNION expr .) ]
  ! JOIN            [ reduce using rule 19 (union_expr -> expr UNION expr .) ]
  ! TIMES           [ reduce using rule 19 (union_expr -> expr UNION expr .) ]


state 33

    (20) minus_expr -> expr MINUS expr .
    (19) union_expr -> expr . UNION expr
    (20) minus_expr -> expr . MINUS expr
    (21) intersect_expr -> expr . INTERSECT expr
    (22) join_expr -> expr . JOIN expr
    (23) times_expr -> expr . TIMES expr

    SEMI            reduce using rule 20 (minus_expr -> expr MINUS expr .)
    RPARENT         reduce using rule 20 (minus_expr -> expr MINUS expr .)
    UNION           shift and go to state 22
    MINUS           shift and go to state 23
    INTERSECT       shift and go to state 24
    JOIN            shift and go to state 25
    TIMES           shift and go to state 26

  ! UNION           [ reduce using rule 20 (minus_expr -> expr MINUS expr .) ]
  ! MINUS           [ reduce using rule 20 (minus_expr -> expr MINUS expr .) ]
  ! INTERSECT       [ reduce using rule 20 (minus_expr -> expr MINUS expr .) ]
  ! JOIN            [ reduce using rule 20 (minus_expr -> expr MINUS expr .) ]
  ! TIMES           [ reduce using rule 20 (minus_expr -> expr MINUS expr .) ]


state 34

    (21) intersect_expr -> expr INTERSECT expr .
    (19) union_expr -> expr . UNION expr
    (20) minus_expr -> expr . MINUS expr
    (21) intersect_expr -> expr . INTERSECT expr
    (22) join_expr -> expr . JOIN expr
    (23) times_expr -> expr . TIMES expr

    SEMI            reduce using rule 21 (intersect_expr -> expr INTERSECT expr .)
    RPARENT         reduce using rule 21 (intersect_expr -> expr INTERSECT expr .)
    UNION           shift and go to state 22
    MINUS           shift and go to state 23
    INTERSECT       shift and go to state 24
    JOIN            shift and go to state 25
    TIMES           shift and go to state 26

  ! UNION           [ reduce using rule 21 (intersect_expr -> expr INTERSECT expr .) ]
  ! MINUS           [ reduce using rule 21 (intersect_expr -> expr INTERSECT expr .) ]
  ! INTERSECT       [ reduce using rule 21 (intersect_expr -> expr INTERSECT expr .) ]
  ! JOIN            [ reduce using rule 21 (intersect_expr -> expr INTERSECT expr .) ]
  ! TIMES           [ reduce using rule 21 (intersect_expr -> expr INTERSECT expr .) ]


state 35

    (22) join_expr -> expr JOIN expr .
    (19) union_expr -> expr . UNION expr
    (20) minus_expr -> expr . MINUS expr
    (21) intersect_expr -> expr . INTERSECT expr
    (22) join_expr -> expr . JOIN expr
    (23) times_expr -> expr . TIMES expr

    SEMI            reduce using rule 22 (join_expr -> expr JOIN expr .)
    UNION           reduce using rule 22 (join_expr -> expr JOIN expr .)
    MINUS           reduce using rule 22 (join_expr -> expr JOIN expr .)
    INTERSECT       reduce using rule 22 (join_expr -> expr JOIN expr .)
    RPARENT         reduce using rule 22 (join_expr -> expr JOIN expr .)
    JOIN            shift and go to state 25
    TIMES           shift and go to state 26

  ! JOIN            [ reduce using rule 22 (join_expr -> expr JOIN expr .) ]
  ! TIMES           [ reduce using rule 22 (join_expr -> expr JOIN expr .) ]
  ! UNION           [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 23 ]
  ! INTERSECT       [ shift and go to state 24 ]


state 36

    (23) times_expr -> expr TIMES expr .
    (19) union_expr -> expr . UNION expr
    (20) minus_expr -> expr . MINUS expr
    (21) intersect_expr -> expr . INTERSECT expr
    (22) join_expr -> expr . JOIN expr
    (23) times_expr -> expr . TIMES expr

    SEMI            reduce using rule 23 (times_expr -> expr TIMES expr .)
    UNION           reduce using rule 23 (times_expr -> expr TIMES expr .)
    MINUS           reduce using rule 23 (times_expr -> expr TIMES expr .)
    INTERSECT       reduce using rule 23 (times_expr -> expr TIMES expr .)
    RPARENT         reduce using rule 23 (times_expr -> expr TIMES expr .)
    JOIN            shift and go to state 25
    TIMES           shift and go to state 26

  ! JOIN            [ reduce using rule 23 (times_expr -> expr TIMES expr .) ]
  ! TIMES           [ reduce using rule 23 (times_expr -> expr TIMES expr .) ]
  ! UNION           [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 23 ]
  ! INTERSECT       [ shift and go to state 24 ]


state 37

    (15) proj_expr -> PROJECT LBRACKET attr_list . RBRACKET LPARENT expr RPARENT
    (18) attr_list -> attr_list . COMMA ID

    RBRACKET        shift and go to state 48
    COMMA           shift and go to state 49


state 38

    (17) attr_list -> ID .

    RBRACKET        reduce using rule 17 (attr_list -> ID .)
    COMMA           reduce using rule 17 (attr_list -> ID .)
    RPARENT         reduce using rule 17 (attr_list -> ID .)


state 39

    (24) paren_expr -> LPARENT expr RPARENT .

    SEMI            reduce using rule 24 (paren_expr -> LPARENT expr RPARENT .)
    UNION           reduce using rule 24 (paren_expr -> LPARENT expr RPARENT .)
    MINUS           reduce using rule 24 (paren_expr -> LPARENT expr RPARENT .)
    INTERSECT       reduce using rule 24 (paren_expr -> LPARENT expr RPARENT .)
    JOIN            reduce using rule 24 (paren_expr -> LPARENT expr RPARENT .)
    TIMES           reduce using rule 24 (paren_expr -> LPARENT expr RPARENT .)
    RPARENT         reduce using rule 24 (paren_expr -> LPARENT expr RPARENT .)


state 40

    (16) rename_expr -> RENAME LBRACKET attr_list . RBRACKET LPARENT expr RPARENT
    (18) attr_list -> attr_list . COMMA ID

    RBRACKET        shift and go to state 50
    COMMA           shift and go to state 49


state 41

    (25) select_expr -> SELECT LBRACKET condition . RBRACKET LPARENT expr RPARENT
    (27) condition -> condition . AND simple_condition

    RBRACKET        shift and go to state 51
    AND             shift and go to state 52


state 42

    (26) condition -> simple_condition .

    RBRACKET        reduce using rule 26 (condition -> simple_condition .)
    AND             reduce using rule 26 (condition -> simple_condition .)


state 43

    (28) simple_condition -> operand . COMPARISON operand

    COMPARISON      shift and go to state 53


state 44

    (29) operand -> ID .

    COMPARISON      reduce using rule 29 (operand -> ID .)
    RBRACKET        reduce using rule 29 (operand -> ID .)
    AND             reduce using rule 29 (operand -> ID .)
    RPARENT         reduce using rule 29 (operand -> ID .)


state 45

    (30) operand -> STRING .

    COMPARISON      reduce using rule 30 (operand -> STRING .)
    RBRACKET        reduce using rule 30 (operand -> STRING .)
    AND             reduce using rule 30 (operand -> STRING .)
    RPARENT         reduce using rule 30 (operand -> STRING .)


state 46

    (31) operand -> NUMBER .

    COMPARISON      reduce using rule 31 (operand -> NUMBER .)
    RBRACKET        reduce using rule 31 (operand -> NUMBER .)
    AND             reduce using rule 31 (operand -> NUMBER .)
    RPARENT         reduce using rule 31 (operand -> NUMBER .)


state 47

    (32) aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT . attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT . attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT . attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT
    (17) attr_list -> . ID
    (18) attr_list -> . attr_list COMMA ID

    ID              shift and go to state 38

    attr_list                      shift and go to state 54

state 48

    (15) proj_expr -> PROJECT LBRACKET attr_list RBRACKET . LPARENT expr RPARENT

    LPARENT         shift and go to state 55


state 49

    (18) attr_list -> attr_list COMMA . ID

    ID              shift and go to state 56


state 50

    (16) rename_expr -> RENAME LBRACKET attr_list RBRACKET . LPARENT expr RPARENT

    LPARENT         shift and go to state 57


state 51

    (25) select_expr -> SELECT LBRACKET condition RBRACKET . LPARENT expr RPARENT

    LPARENT         shift and go to state 58


state 52

    (27) condition -> condition AND . simple_condition
    (28) simple_condition -> . operand COMPARISON operand
    (29) operand -> . ID
    (30) operand -> . STRING
    (31) operand -> . NUMBER

    ID              shift and go to state 44
    STRING          shift and go to state 45
    NUMBER          shift and go to state 46

    simple_condition               shift and go to state 59
    operand                        shift and go to state 43

state 53

    (28) simple_condition -> operand COMPARISON . operand
    (29) operand -> . ID
    (30) operand -> . STRING
    (31) operand -> . NUMBER

    ID              shift and go to state 44
    STRING          shift and go to state 45
    NUMBER          shift and go to state 46

    operand                        shift and go to state 60

state 54

    (32) aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list . RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list . RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list . RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT
    (18) attr_list -> attr_list . COMMA ID

    RPARENT         shift and go to state 61
    COMMA           shift and go to state 49


state 55

    (15) proj_expr -> PROJECT LBRACKET attr_list RBRACKET LPARENT . expr RPARENT
    (2) expr -> . proj_expr
    (3) expr -> . rename_expr
    (4) expr -> . union_expr
    (5) expr -> . minus_expr
    (6) expr -> . intersect_expr
    (7) expr -> . join_expr
    (8) expr -> . times_expr
    (9) expr -> . paren_expr
    (10) expr -> . select_expr
    (11) expr -> . aggregate_expr_1
    (12) expr -> . aggregate_expr_2
    (13) expr -> . aggregate_expr_3
    (14) expr -> . ID
    (15) proj_expr -> . PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (16) rename_expr -> . RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (19) union_expr -> . expr UNION expr
    (20) minus_expr -> . expr MINUS expr
    (21) intersect_expr -> . expr INTERSECT expr
    (22) join_expr -> . expr JOIN expr
    (23) times_expr -> . expr TIMES expr
    (24) paren_expr -> . LPARENT expr RPARENT
    (25) select_expr -> . SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT
    (32) aggregate_expr_1 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    ID              shift and go to state 15
    PROJECT         shift and go to state 16
    RENAME          shift and go to state 18
    LPARENT         shift and go to state 17
    SELECT          shift and go to state 19
    AGGREGATE       shift and go to state 20

    expr                           shift and go to state 62
    proj_expr                      shift and go to state 3
    rename_expr                    shift and go to state 4
    union_expr                     shift and go to state 5
    minus_expr                     shift and go to state 6
    intersect_expr                 shift and go to state 7
    join_expr                      shift and go to state 8
    times_expr                     shift and go to state 9
    paren_expr                     shift and go to state 10
    select_expr                    shift and go to state 11
    aggregate_expr_1               shift and go to state 12
    aggregate_expr_2               shift and go to state 13
    aggregate_expr_3               shift and go to state 14

state 56

    (18) attr_list -> attr_list COMMA ID .

    RBRACKET        reduce using rule 18 (attr_list -> attr_list COMMA ID .)
    COMMA           reduce using rule 18 (attr_list -> attr_list COMMA ID .)
    RPARENT         reduce using rule 18 (attr_list -> attr_list COMMA ID .)


state 57

    (16) rename_expr -> RENAME LBRACKET attr_list RBRACKET LPARENT . expr RPARENT
    (2) expr -> . proj_expr
    (3) expr -> . rename_expr
    (4) expr -> . union_expr
    (5) expr -> . minus_expr
    (6) expr -> . intersect_expr
    (7) expr -> . join_expr
    (8) expr -> . times_expr
    (9) expr -> . paren_expr
    (10) expr -> . select_expr
    (11) expr -> . aggregate_expr_1
    (12) expr -> . aggregate_expr_2
    (13) expr -> . aggregate_expr_3
    (14) expr -> . ID
    (15) proj_expr -> . PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (16) rename_expr -> . RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (19) union_expr -> . expr UNION expr
    (20) minus_expr -> . expr MINUS expr
    (21) intersect_expr -> . expr INTERSECT expr
    (22) join_expr -> . expr JOIN expr
    (23) times_expr -> . expr TIMES expr
    (24) paren_expr -> . LPARENT expr RPARENT
    (25) select_expr -> . SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT
    (32) aggregate_expr_1 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    ID              shift and go to state 15
    PROJECT         shift and go to state 16
    RENAME          shift and go to state 18
    LPARENT         shift and go to state 17
    SELECT          shift and go to state 19
    AGGREGATE       shift and go to state 20

    expr                           shift and go to state 63
    proj_expr                      shift and go to state 3
    rename_expr                    shift and go to state 4
    union_expr                     shift and go to state 5
    minus_expr                     shift and go to state 6
    intersect_expr                 shift and go to state 7
    join_expr                      shift and go to state 8
    times_expr                     shift and go to state 9
    paren_expr                     shift and go to state 10
    select_expr                    shift and go to state 11
    aggregate_expr_1               shift and go to state 12
    aggregate_expr_2               shift and go to state 13
    aggregate_expr_3               shift and go to state 14

state 58

    (25) select_expr -> SELECT LBRACKET condition RBRACKET LPARENT . expr RPARENT
    (2) expr -> . proj_expr
    (3) expr -> . rename_expr
    (4) expr -> . union_expr
    (5) expr -> . minus_expr
    (6) expr -> . intersect_expr
    (7) expr -> . join_expr
    (8) expr -> . times_expr
    (9) expr -> . paren_expr
    (10) expr -> . select_expr
    (11) expr -> . aggregate_expr_1
    (12) expr -> . aggregate_expr_2
    (13) expr -> . aggregate_expr_3
    (14) expr -> . ID
    (15) proj_expr -> . PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (16) rename_expr -> . RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (19) union_expr -> . expr UNION expr
    (20) minus_expr -> . expr MINUS expr
    (21) intersect_expr -> . expr INTERSECT expr
    (22) join_expr -> . expr JOIN expr
    (23) times_expr -> . expr TIMES expr
    (24) paren_expr -> . LPARENT expr RPARENT
    (25) select_expr -> . SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT
    (32) aggregate_expr_1 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    ID              shift and go to state 15
    PROJECT         shift and go to state 16
    RENAME          shift and go to state 18
    LPARENT         shift and go to state 17
    SELECT          shift and go to state 19
    AGGREGATE       shift and go to state 20

    expr                           shift and go to state 64
    proj_expr                      shift and go to state 3
    rename_expr                    shift and go to state 4
    union_expr                     shift and go to state 5
    minus_expr                     shift and go to state 6
    intersect_expr                 shift and go to state 7
    join_expr                      shift and go to state 8
    times_expr                     shift and go to state 9
    paren_expr                     shift and go to state 10
    select_expr                    shift and go to state 11
    aggregate_expr_1               shift and go to state 12
    aggregate_expr_2               shift and go to state 13
    aggregate_expr_3               shift and go to state 14

state 59

    (27) condition -> condition AND simple_condition .

    RBRACKET        reduce using rule 27 (condition -> condition AND simple_condition .)
    AND             reduce using rule 27 (condition -> condition AND simple_condition .)


state 60

    (28) simple_condition -> operand COMPARISON operand .

    RBRACKET        reduce using rule 28 (simple_condition -> operand COMPARISON operand .)
    AND             reduce using rule 28 (simple_condition -> operand COMPARISON operand .)


state 61

    (32) aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT . COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT . COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT . COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    COMMA           shift and go to state 65


state 62

    (15) proj_expr -> PROJECT LBRACKET attr_list RBRACKET LPARENT expr . RPARENT
    (19) union_expr -> expr . UNION expr
    (20) minus_expr -> expr . MINUS expr
    (21) intersect_expr -> expr . INTERSECT expr
    (22) join_expr -> expr . JOIN expr
    (23) times_expr -> expr . TIMES expr

    RPARENT         shift and go to state 66
    UNION           shift and go to state 22
    MINUS           shift and go to state 23
    INTERSECT       shift and go to state 24
    JOIN            shift and go to state 25
    TIMES           shift and go to state 26


state 63

    (16) rename_expr -> RENAME LBRACKET attr_list RBRACKET LPARENT expr . RPARENT
    (19) union_expr -> expr . UNION expr
    (20) minus_expr -> expr . MINUS expr
    (21) intersect_expr -> expr . INTERSECT expr
    (22) join_expr -> expr . JOIN expr
    (23) times_expr -> expr . TIMES expr

    RPARENT         shift and go to state 67
    UNION           shift and go to state 22
    MINUS           shift and go to state 23
    INTERSECT       shift and go to state 24
    JOIN            shift and go to state 25
    TIMES           shift and go to state 26


state 64

    (25) select_expr -> SELECT LBRACKET condition RBRACKET LPARENT expr . RPARENT
    (19) union_expr -> expr . UNION expr
    (20) minus_expr -> expr . MINUS expr
    (21) intersect_expr -> expr . INTERSECT expr
    (22) join_expr -> expr . JOIN expr
    (23) times_expr -> expr . TIMES expr

    RPARENT         shift and go to state 68
    UNION           shift and go to state 22
    MINUS           shift and go to state 23
    INTERSECT       shift and go to state 24
    JOIN            shift and go to state 25
    TIMES           shift and go to state 26


state 65

    (32) aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA . LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA . LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA . LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    LPARENT         shift and go to state 69


state 66

    (15) proj_expr -> PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT .

    SEMI            reduce using rule 15 (proj_expr -> PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT .)
    UNION           reduce using rule 15 (proj_expr -> PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT .)
    MINUS           reduce using rule 15 (proj_expr -> PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT .)
    INTERSECT       reduce using rule 15 (proj_expr -> PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT .)
    JOIN            reduce using rule 15 (proj_expr -> PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT .)
    TIMES           reduce using rule 15 (proj_expr -> PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT .)
    RPARENT         reduce using rule 15 (proj_expr -> PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT .)


state 67

    (16) rename_expr -> RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT .

    SEMI            reduce using rule 16 (rename_expr -> RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT .)
    UNION           reduce using rule 16 (rename_expr -> RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT .)
    MINUS           reduce using rule 16 (rename_expr -> RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT .)
    INTERSECT       reduce using rule 16 (rename_expr -> RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT .)
    JOIN            reduce using rule 16 (rename_expr -> RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT .)
    TIMES           reduce using rule 16 (rename_expr -> RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT .)
    RPARENT         reduce using rule 16 (rename_expr -> RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT .)


state 68

    (25) select_expr -> SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT .

    SEMI            reduce using rule 25 (select_expr -> SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT .)
    UNION           reduce using rule 25 (select_expr -> SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT .)
    MINUS           reduce using rule 25 (select_expr -> SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT .)
    INTERSECT       reduce using rule 25 (select_expr -> SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT .)
    JOIN            reduce using rule 25 (select_expr -> SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT .)
    TIMES           reduce using rule 25 (select_expr -> SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT .)
    RPARENT         reduce using rule 25 (select_expr -> SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT .)


state 69

    (32) aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT . gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT . gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT . gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT
    (35) gen_attr_list -> . gen_attr
    (36) gen_attr_list -> . gen_attr_list COMMA gen_attr
    (37) gen_attr -> . ID
    (38) gen_attr -> . AGG_OP LPARENT ID RPARENT

    ID              shift and go to state 72
    AGG_OP          shift and go to state 73

    gen_attr_list                  shift and go to state 70
    gen_attr                       shift and go to state 71

state 70

    (32) aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list . RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list . RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list . RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT
    (36) gen_attr_list -> gen_attr_list . COMMA gen_attr

    RPARENT         shift and go to state 74
    COMMA           shift and go to state 75


state 71

    (35) gen_attr_list -> gen_attr .

    RPARENT         reduce using rule 35 (gen_attr_list -> gen_attr .)
    COMMA           reduce using rule 35 (gen_attr_list -> gen_attr .)


state 72

    (37) gen_attr -> ID .

    RPARENT         reduce using rule 37 (gen_attr -> ID .)
    COMMA           reduce using rule 37 (gen_attr -> ID .)


state 73

    (38) gen_attr -> AGG_OP . LPARENT ID RPARENT

    LPARENT         shift and go to state 76


state 74

    (32) aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT . RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT . COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT . COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    RBRACKET        shift and go to state 78
    COMMA           shift and go to state 77


state 75

    (36) gen_attr_list -> gen_attr_list COMMA . gen_attr
    (37) gen_attr -> . ID
    (38) gen_attr -> . AGG_OP LPARENT ID RPARENT

    ID              shift and go to state 72
    AGG_OP          shift and go to state 73

    gen_attr                       shift and go to state 79

state 76

    (38) gen_attr -> AGG_OP LPARENT . ID RPARENT

    ID              shift and go to state 80


state 77

    (33) aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA . LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA . LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    LPARENT         shift and go to state 81


state 78

    (32) aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET . LPARENT expr RPARENT

    LPARENT         shift and go to state 82


state 79

    (36) gen_attr_list -> gen_attr_list COMMA gen_attr .

    RPARENT         reduce using rule 36 (gen_attr_list -> gen_attr_list COMMA gen_attr .)
    COMMA           reduce using rule 36 (gen_attr_list -> gen_attr_list COMMA gen_attr .)


state 80

    (38) gen_attr -> AGG_OP LPARENT ID . RPARENT

    RPARENT         shift and go to state 83


state 81

    (33) aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT . attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT . attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT
    (17) attr_list -> . ID
    (18) attr_list -> . attr_list COMMA ID

    ID              shift and go to state 38

    attr_list                      shift and go to state 84

state 82

    (32) aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT . expr RPARENT
    (2) expr -> . proj_expr
    (3) expr -> . rename_expr
    (4) expr -> . union_expr
    (5) expr -> . minus_expr
    (6) expr -> . intersect_expr
    (7) expr -> . join_expr
    (8) expr -> . times_expr
    (9) expr -> . paren_expr
    (10) expr -> . select_expr
    (11) expr -> . aggregate_expr_1
    (12) expr -> . aggregate_expr_2
    (13) expr -> . aggregate_expr_3
    (14) expr -> . ID
    (15) proj_expr -> . PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (16) rename_expr -> . RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (19) union_expr -> . expr UNION expr
    (20) minus_expr -> . expr MINUS expr
    (21) intersect_expr -> . expr INTERSECT expr
    (22) join_expr -> . expr JOIN expr
    (23) times_expr -> . expr TIMES expr
    (24) paren_expr -> . LPARENT expr RPARENT
    (25) select_expr -> . SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT
    (32) aggregate_expr_1 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    ID              shift and go to state 15
    PROJECT         shift and go to state 16
    RENAME          shift and go to state 18
    LPARENT         shift and go to state 17
    SELECT          shift and go to state 19
    AGGREGATE       shift and go to state 20

    expr                           shift and go to state 85
    proj_expr                      shift and go to state 3
    rename_expr                    shift and go to state 4
    union_expr                     shift and go to state 5
    minus_expr                     shift and go to state 6
    intersect_expr                 shift and go to state 7
    join_expr                      shift and go to state 8
    times_expr                     shift and go to state 9
    paren_expr                     shift and go to state 10
    select_expr                    shift and go to state 11
    aggregate_expr_1               shift and go to state 12
    aggregate_expr_2               shift and go to state 13
    aggregate_expr_3               shift and go to state 14

state 83

    (38) gen_attr -> AGG_OP LPARENT ID RPARENT .

    RPARENT         reduce using rule 38 (gen_attr -> AGG_OP LPARENT ID RPARENT .)
    COMMA           reduce using rule 38 (gen_attr -> AGG_OP LPARENT ID RPARENT .)


state 84

    (33) aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list . RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list . RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT
    (18) attr_list -> attr_list . COMMA ID

    RPARENT         shift and go to state 86
    COMMA           shift and go to state 49


state 85

    (32) aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr . RPARENT
    (19) union_expr -> expr . UNION expr
    (20) minus_expr -> expr . MINUS expr
    (21) intersect_expr -> expr . INTERSECT expr
    (22) join_expr -> expr . JOIN expr
    (23) times_expr -> expr . TIMES expr

    RPARENT         shift and go to state 87
    UNION           shift and go to state 22
    MINUS           shift and go to state 23
    INTERSECT       shift and go to state 24
    JOIN            shift and go to state 25
    TIMES           shift and go to state 26


state 86

    (33) aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT . RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT . COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    RBRACKET        shift and go to state 89
    COMMA           shift and go to state 88


state 87

    (32) aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT .

    SEMI            reduce using rule 32 (aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT .)
    UNION           reduce using rule 32 (aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT .)
    MINUS           reduce using rule 32 (aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT .)
    INTERSECT       reduce using rule 32 (aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT .)
    JOIN            reduce using rule 32 (aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT .)
    TIMES           reduce using rule 32 (aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT .)
    RPARENT         reduce using rule 32 (aggregate_expr_1 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT .)


state 88

    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA . LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    LPARENT         shift and go to state 90


state 89

    (33) aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET . LPARENT expr RPARENT

    LPARENT         shift and go to state 91


state 90

    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT . gen_condition RPARENT RBRACKET LPARENT expr RPARENT
    (39) gen_condition -> . simple_gen_condition
    (40) gen_condition -> . gen_condition AND simple_gen_condition
    (41) simple_gen_condition -> . gen_operand COMPARISON gen_operand
    (42) simple_gen_condition -> . gen_operand COMPARISON operand
    (43) simple_gen_condition -> . operand COMPARISON gen_operand
    (44) simple_gen_condition -> . operand COMPARISON operand
    (45) gen_operand -> . AGG_OP LPARENT ID RPARENT
    (29) operand -> . ID
    (30) operand -> . STRING
    (31) operand -> . NUMBER

    AGG_OP          shift and go to state 96
    ID              shift and go to state 44
    STRING          shift and go to state 45
    NUMBER          shift and go to state 46

    gen_condition                  shift and go to state 92
    simple_gen_condition           shift and go to state 93
    gen_operand                    shift and go to state 94
    operand                        shift and go to state 95

state 91

    (33) aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT . expr RPARENT
    (2) expr -> . proj_expr
    (3) expr -> . rename_expr
    (4) expr -> . union_expr
    (5) expr -> . minus_expr
    (6) expr -> . intersect_expr
    (7) expr -> . join_expr
    (8) expr -> . times_expr
    (9) expr -> . paren_expr
    (10) expr -> . select_expr
    (11) expr -> . aggregate_expr_1
    (12) expr -> . aggregate_expr_2
    (13) expr -> . aggregate_expr_3
    (14) expr -> . ID
    (15) proj_expr -> . PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (16) rename_expr -> . RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (19) union_expr -> . expr UNION expr
    (20) minus_expr -> . expr MINUS expr
    (21) intersect_expr -> . expr INTERSECT expr
    (22) join_expr -> . expr JOIN expr
    (23) times_expr -> . expr TIMES expr
    (24) paren_expr -> . LPARENT expr RPARENT
    (25) select_expr -> . SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT
    (32) aggregate_expr_1 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    ID              shift and go to state 15
    PROJECT         shift and go to state 16
    RENAME          shift and go to state 18
    LPARENT         shift and go to state 17
    SELECT          shift and go to state 19
    AGGREGATE       shift and go to state 20

    expr                           shift and go to state 97
    proj_expr                      shift and go to state 3
    rename_expr                    shift and go to state 4
    union_expr                     shift and go to state 5
    minus_expr                     shift and go to state 6
    intersect_expr                 shift and go to state 7
    join_expr                      shift and go to state 8
    times_expr                     shift and go to state 9
    paren_expr                     shift and go to state 10
    select_expr                    shift and go to state 11
    aggregate_expr_1               shift and go to state 12
    aggregate_expr_2               shift and go to state 13
    aggregate_expr_3               shift and go to state 14

state 92

    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition . RPARENT RBRACKET LPARENT expr RPARENT
    (40) gen_condition -> gen_condition . AND simple_gen_condition

    RPARENT         shift and go to state 98
    AND             shift and go to state 99


state 93

    (39) gen_condition -> simple_gen_condition .

    RPARENT         reduce using rule 39 (gen_condition -> simple_gen_condition .)
    AND             reduce using rule 39 (gen_condition -> simple_gen_condition .)


state 94

    (41) simple_gen_condition -> gen_operand . COMPARISON gen_operand
    (42) simple_gen_condition -> gen_operand . COMPARISON operand

    COMPARISON      shift and go to state 100


state 95

    (43) simple_gen_condition -> operand . COMPARISON gen_operand
    (44) simple_gen_condition -> operand . COMPARISON operand

    COMPARISON      shift and go to state 101


state 96

    (45) gen_operand -> AGG_OP . LPARENT ID RPARENT

    LPARENT         shift and go to state 102


state 97

    (33) aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr . RPARENT
    (19) union_expr -> expr . UNION expr
    (20) minus_expr -> expr . MINUS expr
    (21) intersect_expr -> expr . INTERSECT expr
    (22) join_expr -> expr . JOIN expr
    (23) times_expr -> expr . TIMES expr

    RPARENT         shift and go to state 103
    UNION           shift and go to state 22
    MINUS           shift and go to state 23
    INTERSECT       shift and go to state 24
    JOIN            shift and go to state 25
    TIMES           shift and go to state 26


state 98

    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT . RBRACKET LPARENT expr RPARENT

    RBRACKET        shift and go to state 104


state 99

    (40) gen_condition -> gen_condition AND . simple_gen_condition
    (41) simple_gen_condition -> . gen_operand COMPARISON gen_operand
    (42) simple_gen_condition -> . gen_operand COMPARISON operand
    (43) simple_gen_condition -> . operand COMPARISON gen_operand
    (44) simple_gen_condition -> . operand COMPARISON operand
    (45) gen_operand -> . AGG_OP LPARENT ID RPARENT
    (29) operand -> . ID
    (30) operand -> . STRING
    (31) operand -> . NUMBER

    AGG_OP          shift and go to state 96
    ID              shift and go to state 44
    STRING          shift and go to state 45
    NUMBER          shift and go to state 46

    simple_gen_condition           shift and go to state 105
    gen_operand                    shift and go to state 94
    operand                        shift and go to state 95

state 100

    (41) simple_gen_condition -> gen_operand COMPARISON . gen_operand
    (42) simple_gen_condition -> gen_operand COMPARISON . operand
    (45) gen_operand -> . AGG_OP LPARENT ID RPARENT
    (29) operand -> . ID
    (30) operand -> . STRING
    (31) operand -> . NUMBER

    AGG_OP          shift and go to state 96
    ID              shift and go to state 44
    STRING          shift and go to state 45
    NUMBER          shift and go to state 46

    gen_operand                    shift and go to state 106
    operand                        shift and go to state 107

state 101

    (43) simple_gen_condition -> operand COMPARISON . gen_operand
    (44) simple_gen_condition -> operand COMPARISON . operand
    (45) gen_operand -> . AGG_OP LPARENT ID RPARENT
    (29) operand -> . ID
    (30) operand -> . STRING
    (31) operand -> . NUMBER

    AGG_OP          shift and go to state 96
    ID              shift and go to state 44
    STRING          shift and go to state 45
    NUMBER          shift and go to state 46

    operand                        shift and go to state 108
    gen_operand                    shift and go to state 109

state 102

    (45) gen_operand -> AGG_OP LPARENT . ID RPARENT

    ID              shift and go to state 110


state 103

    (33) aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT .

    SEMI            reduce using rule 33 (aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT .)
    UNION           reduce using rule 33 (aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT .)
    MINUS           reduce using rule 33 (aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT .)
    INTERSECT       reduce using rule 33 (aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT .)
    JOIN            reduce using rule 33 (aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT .)
    TIMES           reduce using rule 33 (aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT .)
    RPARENT         reduce using rule 33 (aggregate_expr_2 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT .)


state 104

    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET . LPARENT expr RPARENT

    LPARENT         shift and go to state 111


state 105

    (40) gen_condition -> gen_condition AND simple_gen_condition .

    RPARENT         reduce using rule 40 (gen_condition -> gen_condition AND simple_gen_condition .)
    AND             reduce using rule 40 (gen_condition -> gen_condition AND simple_gen_condition .)


state 106

    (41) simple_gen_condition -> gen_operand COMPARISON gen_operand .

    RPARENT         reduce using rule 41 (simple_gen_condition -> gen_operand COMPARISON gen_operand .)
    AND             reduce using rule 41 (simple_gen_condition -> gen_operand COMPARISON gen_operand .)


state 107

    (42) simple_gen_condition -> gen_operand COMPARISON operand .

    RPARENT         reduce using rule 42 (simple_gen_condition -> gen_operand COMPARISON operand .)
    AND             reduce using rule 42 (simple_gen_condition -> gen_operand COMPARISON operand .)


state 108

    (44) simple_gen_condition -> operand COMPARISON operand .

    RPARENT         reduce using rule 44 (simple_gen_condition -> operand COMPARISON operand .)
    AND             reduce using rule 44 (simple_gen_condition -> operand COMPARISON operand .)


state 109

    (43) simple_gen_condition -> operand COMPARISON gen_operand .

    RPARENT         reduce using rule 43 (simple_gen_condition -> operand COMPARISON gen_operand .)
    AND             reduce using rule 43 (simple_gen_condition -> operand COMPARISON gen_operand .)


state 110

    (45) gen_operand -> AGG_OP LPARENT ID . RPARENT

    RPARENT         shift and go to state 112


state 111

    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT . expr RPARENT
    (2) expr -> . proj_expr
    (3) expr -> . rename_expr
    (4) expr -> . union_expr
    (5) expr -> . minus_expr
    (6) expr -> . intersect_expr
    (7) expr -> . join_expr
    (8) expr -> . times_expr
    (9) expr -> . paren_expr
    (10) expr -> . select_expr
    (11) expr -> . aggregate_expr_1
    (12) expr -> . aggregate_expr_2
    (13) expr -> . aggregate_expr_3
    (14) expr -> . ID
    (15) proj_expr -> . PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (16) rename_expr -> . RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT
    (19) union_expr -> . expr UNION expr
    (20) minus_expr -> . expr MINUS expr
    (21) intersect_expr -> . expr INTERSECT expr
    (22) join_expr -> . expr JOIN expr
    (23) times_expr -> . expr TIMES expr
    (24) paren_expr -> . LPARENT expr RPARENT
    (25) select_expr -> . SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT
    (32) aggregate_expr_1 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (33) aggregate_expr_2 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT RBRACKET LPARENT expr RPARENT
    (34) aggregate_expr_3 -> . AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT

    ID              shift and go to state 15
    PROJECT         shift and go to state 16
    RENAME          shift and go to state 18
    LPARENT         shift and go to state 17
    SELECT          shift and go to state 19
    AGGREGATE       shift and go to state 20

    expr                           shift and go to state 113
    proj_expr                      shift and go to state 3
    rename_expr                    shift and go to state 4
    union_expr                     shift and go to state 5
    minus_expr                     shift and go to state 6
    intersect_expr                 shift and go to state 7
    join_expr                      shift and go to state 8
    times_expr                     shift and go to state 9
    paren_expr                     shift and go to state 10
    select_expr                    shift and go to state 11
    aggregate_expr_1               shift and go to state 12
    aggregate_expr_2               shift and go to state 13
    aggregate_expr_3               shift and go to state 14

state 112

    (45) gen_operand -> AGG_OP LPARENT ID RPARENT .

    COMPARISON      reduce using rule 45 (gen_operand -> AGG_OP LPARENT ID RPARENT .)
    RPARENT         reduce using rule 45 (gen_operand -> AGG_OP LPARENT ID RPARENT .)
    AND             reduce using rule 45 (gen_operand -> AGG_OP LPARENT ID RPARENT .)


state 113

    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr . RPARENT
    (19) union_expr -> expr . UNION expr
    (20) minus_expr -> expr . MINUS expr
    (21) intersect_expr -> expr . INTERSECT expr
    (22) join_expr -> expr . JOIN expr
    (23) times_expr -> expr . TIMES expr

    RPARENT         shift and go to state 114
    UNION           shift and go to state 22
    MINUS           shift and go to state 23
    INTERSECT       shift and go to state 24
    JOIN            shift and go to state 25
    TIMES           shift and go to state 26


state 114

    (34) aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT .

    SEMI            reduce using rule 34 (aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT .)
    UNION           reduce using rule 34 (aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT .)
    MINUS           reduce using rule 34 (aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT .)
    INTERSECT       reduce using rule 34 (aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT .)
    JOIN            reduce using rule 34 (aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT .)
    TIMES           reduce using rule 34 (aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT .)
    RPARENT         reduce using rule 34 (aggregate_expr_3 -> AGGREGATE LBRACKET LPARENT attr_list RPARENT COMMA LPARENT gen_attr_list RPARENT COMMA LPARENT attr_list RPARENT COMMA LPARENT gen_condition RPARENT RBRACKET LPARENT expr RPARENT .)

