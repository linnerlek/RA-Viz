
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUNIONMINUSINTERSECTrightTIMESJOINAND COMMA COMPARISION ID INTERSECT JOIN LBRACKET LPARENT MINUS NUMBER PROJECT RBRACKET RENAME RPARENT SELECT SEMI STRING TIMES UNIONquery : expr SEMIexpr : proj_expr \n            | rename_expr \n            | union_expr     \n            | minus_expr \n            | intersect_expr \n            | join_expr \n            | times_expr \n            | paren_expr \n            | select_expr expr : IDproj_expr : PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENTrename_expr : RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENTattr_list : IDattr_list : attr_list COMMA IDunion_expr : expr UNION exprminus_expr : expr MINUS expr intersect_expr : expr INTERSECT exprjoin_expr : expr JOIN exprtimes_expr : expr TIMES exprparen_expr : LPARENT expr RPARENTselect_expr : SELECT LBRACKET condition RBRACKET LPARENT expr RPARENTcondition : simple_conditioncondition : condition AND simple_conditionsimple_condition : operand COMPARISION operandoperand : IDoperand : STRINGoperand : NUMBER'
    
_lr_action_items = {'ID':([0,14,18,19,20,21,22,23,25,26,43,46,47,48,50,51,],[12,12,12,12,12,12,12,33,33,39,49,39,39,12,12,12,]),'PROJECT':([0,14,18,19,20,21,22,48,50,51,],[13,13,13,13,13,13,13,13,13,13,]),'RENAME':([0,14,18,19,20,21,22,48,50,51,],[15,15,15,15,15,15,15,15,15,15,]),'LPARENT':([0,14,18,19,20,21,22,42,44,45,48,50,51,],[14,14,14,14,14,14,14,48,50,51,14,14,14,]),'SELECT':([0,14,18,19,20,21,22,48,50,51,],[16,16,16,16,16,16,16,16,16,16,]),'$end':([1,17,],[0,-1,]),'SEMI':([2,3,4,5,6,7,8,9,10,11,12,27,28,29,30,31,34,57,58,59,],[17,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-16,-17,-18,-19,-20,-21,-12,-13,-22,]),'UNION':([2,3,4,5,6,7,8,9,10,11,12,24,27,28,29,30,31,34,54,55,56,57,58,59,],[18,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,18,18,18,18,-19,-20,-21,18,18,18,-12,-13,-22,]),'MINUS':([2,3,4,5,6,7,8,9,10,11,12,24,27,28,29,30,31,34,54,55,56,57,58,59,],[19,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,19,19,19,19,-19,-20,-21,19,19,19,-12,-13,-22,]),'INTERSECT':([2,3,4,5,6,7,8,9,10,11,12,24,27,28,29,30,31,34,54,55,56,57,58,59,],[20,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,20,20,20,20,-19,-20,-21,20,20,20,-12,-13,-22,]),'JOIN':([2,3,4,5,6,7,8,9,10,11,12,24,27,28,29,30,31,34,54,55,56,57,58,59,],[21,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,21,21,21,21,21,21,-21,21,21,21,-12,-13,-22,]),'TIMES':([2,3,4,5,6,7,8,9,10,11,12,24,27,28,29,30,31,34,54,55,56,57,58,59,],[22,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,22,22,22,22,22,22,-21,22,22,22,-12,-13,-22,]),'RPARENT':([3,4,5,6,7,8,9,10,11,12,24,27,28,29,30,31,34,54,55,56,57,58,59,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,34,-16,-17,-18,-19,-20,-21,57,58,59,-12,-13,-22,]),'LBRACKET':([13,15,16,],[23,25,26,]),'STRING':([26,46,47,],[40,40,40,]),'NUMBER':([26,46,47,],[41,41,41,]),'RBRACKET':([32,33,35,36,37,39,40,41,49,52,53,],[42,-14,44,45,-23,-26,-27,-28,-15,-24,-25,]),'COMMA':([32,33,35,49,],[43,-14,43,-15,]),'AND':([36,37,39,40,41,52,53,],[46,-23,-26,-27,-28,-24,-25,]),'COMPARISION':([38,39,40,41,],[47,-26,-27,-28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'query':([0,],[1,]),'expr':([0,14,18,19,20,21,22,48,50,51,],[2,24,27,28,29,30,31,54,55,56,]),'proj_expr':([0,14,18,19,20,21,22,48,50,51,],[3,3,3,3,3,3,3,3,3,3,]),'rename_expr':([0,14,18,19,20,21,22,48,50,51,],[4,4,4,4,4,4,4,4,4,4,]),'union_expr':([0,14,18,19,20,21,22,48,50,51,],[5,5,5,5,5,5,5,5,5,5,]),'minus_expr':([0,14,18,19,20,21,22,48,50,51,],[6,6,6,6,6,6,6,6,6,6,]),'intersect_expr':([0,14,18,19,20,21,22,48,50,51,],[7,7,7,7,7,7,7,7,7,7,]),'join_expr':([0,14,18,19,20,21,22,48,50,51,],[8,8,8,8,8,8,8,8,8,8,]),'times_expr':([0,14,18,19,20,21,22,48,50,51,],[9,9,9,9,9,9,9,9,9,9,]),'paren_expr':([0,14,18,19,20,21,22,48,50,51,],[10,10,10,10,10,10,10,10,10,10,]),'select_expr':([0,14,18,19,20,21,22,48,50,51,],[11,11,11,11,11,11,11,11,11,11,]),'attr_list':([23,25,],[32,35,]),'condition':([26,],[36,]),'simple_condition':([26,46,],[37,52,]),'operand':([26,46,47,],[38,38,53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('query -> expr SEMI','query',2,'p_query','RAP.py',84),
  ('expr -> proj_expr','expr',1,'p_expr','RAP.py',88),
  ('expr -> rename_expr','expr',1,'p_expr','RAP.py',89),
  ('expr -> union_expr','expr',1,'p_expr','RAP.py',90),
  ('expr -> minus_expr','expr',1,'p_expr','RAP.py',91),
  ('expr -> intersect_expr','expr',1,'p_expr','RAP.py',92),
  ('expr -> join_expr','expr',1,'p_expr','RAP.py',93),
  ('expr -> times_expr','expr',1,'p_expr','RAP.py',94),
  ('expr -> paren_expr','expr',1,'p_expr','RAP.py',95),
  ('expr -> select_expr','expr',1,'p_expr','RAP.py',96),
  ('expr -> ID','expr',1,'p_ID','RAP.py',100),
  ('proj_expr -> PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT','proj_expr',7,'p_proj_expr','RAP.py',106),
  ('rename_expr -> RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT','rename_expr',7,'p_rename_expr','RAP.py',112),
  ('attr_list -> ID','attr_list',1,'p_attr_list','RAP.py',118),
  ('attr_list -> attr_list COMMA ID','attr_list',3,'p_attr_list_2','RAP.py',122),
  ('union_expr -> expr UNION expr','union_expr',3,'p_union_expr','RAP.py',126),
  ('minus_expr -> expr MINUS expr','minus_expr',3,'p_minus_expr','RAP.py',131),
  ('intersect_expr -> expr INTERSECT expr','intersect_expr',3,'p_intersect_expr','RAP.py',136),
  ('join_expr -> expr JOIN expr','join_expr',3,'p_join_expr','RAP.py',141),
  ('times_expr -> expr TIMES expr','times_expr',3,'p_times_expr','RAP.py',146),
  ('paren_expr -> LPARENT expr RPARENT','paren_expr',3,'p_paren_expr','RAP.py',151),
  ('select_expr -> SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT','select_expr',7,'p_select_expr','RAP.py',155),
  ('condition -> simple_condition','condition',1,'p_condition','RAP.py',161),
  ('condition -> condition AND simple_condition','condition',3,'p_condition_2','RAP.py',165),
  ('simple_condition -> operand COMPARISION operand','simple_condition',3,'p_simple_condition','RAP.py',169),
  ('operand -> ID','operand',1,'p_operand_1','RAP.py',173),
  ('operand -> STRING','operand',1,'p_operand_2','RAP.py',177),
  ('operand -> NUMBER','operand',1,'p_operand_3','RAP.py',181),
]
